{
  "openapi": "3.0.3",
  "info": {
    "title": "Quote Generation API",
    "description": "This is an API for generating quotes, user authentication, and tracking API usage.",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://milestone1server-4a2e0b56cbf7.herokuapp.com"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid request data"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Authenticate a user and establish a session",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully"
          },
          "401": {
            "description": "Unauthorized, invalid username or password"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/check-session": {
      "get": {
        "summary": "Verify if the user’s session is still valid",
        "responses": {
          "200": {
            "description": "Session is valid"
          },
          "401": {
            "description": "Unauthorized, session invalid or expired"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/generate-quote": {
      "post": {
        "summary": "Create a new quote, incrementing the user’s API call count",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Quote generated successfully"
          },
          "400": {
            "description": "Invalid request data"
          },
          "401": {
            "description": "Unauthorized, invalid or expired session"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}/email": {
      "put": {
        "summary": "Update the email of a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email updated successfully"
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "summary": "Delete a user account, restricted to admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized, admin rights required"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}/api-usage": {
      "get": {
        "summary": "Get the number of API calls made by a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API usage retrieved successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/api-usage": {
      "get": {
        "summary": "Retrieve the API usage stats for all users",
        "responses": {
          "200": {
            "description": "API usage stats retrieved successfully"
          },
          "401": {
            "description": "Unauthorized, admin rights required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    }
  }
}